set -g  default-terminal "tmux-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

unbind C-b
set-option -g prefix M-f
bind-key M-f send-prefix
set -sg escape-time 10

bind r source-file /home/kd/.config/tmux/tmux.conf
set -g base-index 1

# vi mode binds
set-window-option -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi u send-keys -X copy-pipe-and-cancel 'xargs -I{} tmux new-window "nvim {}"' 
bind -T copy-mode-vi o send-keys -X copy-pipe-and-cancel 'xargs -I{} nvr --remote {}' 
bind-key / copy-mode \; send-key ?

# # Open current temerinal buffer in vim 
# bind-key a run ~/.config/tmux/scripts/openTerminalInVim

# bind-key a split-window -v

bind-key -r e run "~/dotfiles/scripts/tmux-test.sh" 

# Panes
# bind h split-window -h # Split panes horizontal
bind h run-shell "tmux split-window -h ; tmux select-layout main-horizontal ; tmux resize-pane -D 30" # Split panes vertically
bind v run-shell "tmux split-window -v ; tmux select-layout main-vertical ; tmux resize-pane -R 20" # Split panes vertically

## Focus Pane
bind -n M-j select-pane -L
bind -n M-k select-pane -D
bind -n M-l select-pane -L
bind -n M-\; select-pane -R

## Toggle last pane
bind -r M-g last-window

## Pane layouts
bind -n M-y run-shell "tmux select-layout main-vertical ; tmux resize-pane -R 20" 
bind -n M-t run-shell "tmux select-layout main-horizontal ; tmux resize-pane -D 30" 

## Resize Panes
bind -n M-z resize-pane -Z
bind -n M-i resize-pane -D 10
bind -n M-o resize-pane -U 10
bind -n M-u resize-pane -L 10
bind -n M-p resize-pane -R 10

# Navigation
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'M-j' if-shell "$is_vim" 'send-keys C-h \; resize-pane -R 35' 'select-pane -L \; resize-pane -R 35'
bind-key -n 'M-k' if-shell "$is_vim" "send-keys C-j \; resize-pane -U 35" "select-pane -D \; resize-pane -D 35"
bind-key -n 'M-l' if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key -n 'M-;' if-shell "$is_vim" 'send-keys C-l \; resize-pane -L 35' 'select-pane -R \; resize-pane -L 35'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
"bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
"bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'M-j' select-pane -L
bind-key -T copy-mode-vi 'M-k' select-pane -D
bind-key -T copy-mode-vi 'M-l' select-pane -U
bind-key -T copy-mode-vi 'M-;' select-pane -R
# bind-key -T copy-mode-vi 'M-\' select-pane -l



# shortcuts
bind -r T neww -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || nvim ~/.dotfiles/personal/todo.md"
bind-key -r i run-shell "tmux neww tmux-cht.sh"

# Sessions
# forget the find window.  That is for chumps
bind-key -r f run-shell "tmux neww ~/.local/bin/tmux-sessionizer"
# bind-key -r A run-shell "~/.local/bin/tmux-sessionizer ~/.config/nvim" 
# bind-key -r S run-shell "~/.local/bin/tmux-sessionizer ~/.config/zsh" 
# bind-key -r D run-shell "~/.local/bin/tmux-sessionizer ~/.config/tmux"
bind-key -r F run-shell "~/.local/bin/tmux-sessionizer ~/dotfiles"

bind-key -r J run-shell "~/.local/bin/tmux-sessionizer ~/repos/station-booking"
bind-key -r K run-shell "~/.local/bin/tmux-sessionizer ~/repos/booking-app"

set-window-option -g pane-base-index 1


# if-shell -b 'test -n "$WSLENV"' 'bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel clip.exe'
# if-shell -b 'test -n "$WSLENV"' 'bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel clip.exe'

# set-window-option -g mode-keys vi
# bind -T copy-mode-vi v send-keys -X begin-selection
# bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'



# Status bar

## Colors
BG="#16161e"
FG="#7aa2f7"
HL="#8bdefc"

## Backgrounds
STANDARD="fg=$FG,bg=$BG"
INVERTED="fg=$BG,bg=$FG"
HL_STANDARD="fg=$BG,bg=$HL"
HL_INVERTED="fg=$HL,bg=$BG"

## Commands
SESSION_W_PANE_NUM="#S - #P/#(tmux list-panes | wc -l)"
TIME="#(date +"%H:%M")"
DATE="#(date +"%d-%m") #(date +"%a")"

## Displays
WINDOW_DISPLAY="#W #F"
SESSION_DISPLAY="#S"
PANE_NUM_DISPALY="#P/#(tmux list-panes | wc -l)"

set-option -g status on
set-option -g status-interval 2
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 120
set -g status-style $STANDARD
set -g status-left "#[$INVERTED] $SESSION_DISPLAY #[$STANDARD]#[$INVERTED] $PANE_NUM_DISPALY #[$STANDARD]"
set -g status-right "#[$STANDARD]#[$INVERTED] $DATE #[$STANDARD]#[$INVERTED] $TIME "
set -g window-status-format "#[$INVERTED] $WINDOW_DISPLAY #[$STANDARD]"
set -g window-status-current-format "#[$HL_STANDARD] $WINDOW_DISPLAY #[$HL_INVERTED]"
set -g window-status-activity-style fg=$HL
set -g window-status-style $INVERTED
# Plugins 

set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.config/tmux/plugins/tpm'
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @tpm_plugins '          \
  tmux-plugins/tpm             \
  tmux-plugins/tmux-sensible   \
  tmux-plugins/tmux-resurrect  \
  tmux-plugins/tmux-continuum  \
  tmux-plugins/tmux-yank       \
'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run ~/.config/tmux/plugins/tpm/tpm

